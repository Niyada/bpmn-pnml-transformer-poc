# This is a basic workflow to help you get started with Actions
name: Continious Integration

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [main]
    types: [synchronize, opened, reopened]
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: "read"
      id-token: "write"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: "actions/checkout@v4"

      # Setting up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # Linting
      - name: Linting check
        run: ruff check .

      # Run Unit Tests
      - name: Run Unit tests
        run: python -m unittest discover -s ./test/unit -v
      
      # Run Integration Tests
      - name: Run Integration tests
        run: python -m unittest discover -s ./test/integration -v
      
      # Authenticating at GCP
      # see https://github.com/google-github-actions/deploy-cloud-functions
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      # Deploy Canary Function
      - id: "deploy"
        name: "Deploy Canary Function"
        uses: "google-github-actions/deploy-cloud-functions@v1"
        with:
          name: "canray_health_${{ github.event.pull_request.number || 'manual' }}"
          entry_point: "get_health"
          source_dir: "src/health"
          runtime: "python312"
          region: "europe-west3"
          description: "[CANARY] Health status endpoint."
      
      # Authenticating at GCP to get id token for deployed function
      # see https://github.com/google-github-actions/deploy-cloud-functions
      - id: "authidtoken"
        name: "Authenticate to Google Cloud to get id token"
        uses: "google-github-actions/auth@v1"
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          token_format: "id_token"
          id_token_audience: ${{ steps.deploy.outputs.url }}


      # Set Canary url as environment variable
      - name: Set URL of deployed canary function as env variable
        run: |
          echo "E2E_URL=$(echo ${{ steps.deploy.outputs.url }})" >> $GITHUB_ENV
          echo "E2E_IDENTITY_TOKEN=$(echo ${{ steps.authidtoken.outputs.id_token }})" >> $GITHUB_ENV

      # Run e2e Tests against Canary Function
      - name: Run e2e tests
        run: python -m unittest discover -s ./test/e2e -v
      
      # Remove Canary Function
      - name: Remove Canary Function
        if: always()
        run: gcloud functions delete canray_health --region europe-west3 --quiet